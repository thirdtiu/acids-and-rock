{%- comment -%}
--------------------------------------
assign section settings to variables
--------------------------------------
{%- endcomment -%}

{% if section.settings.spacing_outside_section %}
  {%- assign top_spacing_inside = section.settings.section_spacing_top -%}
  {%- assign bottom_spacing_inside = section.settings.section_spacing_bottom -%}
  {%- assign bg_color_on_inner = "background" -%}
  {% assign extra_padding = "inside-padding" %}
{% else %}
  {%- assign top_spacing_outside = section.settings.section_spacing_top -%}
  {%- assign bottom_spacing_outside = section.settings.section_spacing_bottom -%}
  {%- assign bg_color_on_section = "background" -%}
  {% assign extra_padding = "" %}
{% endif %}

{% if section.settings.color_theme %}
  {% assign text_color = section.settings.color_theme %}
{% else %}
  {% assign text_color = "" %}
{% endif %}


{% if section.settings.is_full_width %}
  {% assign is_full_width = "full" %}
{% else %}
  {% assign is_full_width = "" %}
{% endif %}


{% if section.settings.is_centered %}
  {% assign text_center = "text-center" %}
  {% assign align_center = "align-center" %}
{% else %}
  {% assign text_center = "" %}
  {% assign align_center = "" %}
{% endif %}

{% if section.settings.add_gutter %}
  {% assign grid_gutter = "grid-gutter" %}
{% else %}
  {% assign grid_gutter = "" %}
{% endif %}

{%- comment -%} hide main grid mobile because carousel will be showing {%- endcomment -%}
{% if section.settings.is_carousel_on_mobile %}
  {% assign visibility = "show-for-large" %}
{% else %}
  {% assign visibility = "" %}
{% endif %}

{% assign animation_type = "data-aos='fade-up'" %}

{% if section.settings.is_carousel_on_mobile %}
  {% assign full_mobile = "full-mobile" %}
{% endif %}
{% assign section_layout = section.settings.section_layout %}

<section class="mfr-core__text-grid {{ top_spacing_outside }} {{ bottom_spacing_outside }} {{ bg_color_on_section }}">

  <div class="grid-container {{ full_mobile }} {{ is_full_width }} {{ top_spacing_inside }} {{ bottom_spacing_inside }}">
    <div class="inner  {{ extra_padding }} {{ bg_color_on_inner }} {{ grid_gutter }} ">


      <div class="grid-x {{ align_center }}">

        <div class="cell small-11 medium-10 section-content {{ text_color }} {{ text_center }}">
          <div class="inner">

            {%- for block in section.blocks -%}
              {% case block.type %}
                
                {%- when 'icon' -%}
                  {% render 'component__section-icon', icon: block.settings.icon, icon_width: block.settings.icon_width, svg_code: block.settings.svg_code %} 
                
                {%- when 'small_text' -%}
                  <div class="small-text" {{ block.shopify_attributes }}>{{ block.settings.text }}</div>
                
                {%- when 'heading' -%}
                {% render 'component__title-block', text: block.settings.heading, classes: block.settings.header_style, text_size: block.settings.make_large %}

                {%- when 'page_title' -%}
                {% render 'component__title-block', text: page.title, classes: block.settings.header_style, text_size: block.settings.make_large %}
               
                {%- when 'text' -%}
                <div class="section-text {{ block.settings.text_style }}" {{ block.shopify_attributes }} {{ animation_type }} style="{% if block.settings.max_width == 0 %}max-width: 100%;{% elsif block.settings.max_width >= 1 %} max-width: {{ block.settings.max_width }}rem; width: 90%; {% endif %}">{{ block.settings.text }}</div>

                {% when 'button' %}
                  {% if section_layout == 'centered_image' %}
                  <div class="button-set {{ align_center }}">
                    {%- render 'component__button', 
                      button_link: block.settings.button_link, 
                      button_style: block.settings.button_style, 
                      button_color: block.settings.button_color, 
                      button_has_arrow: block.settings.button_has_arrow, 
                      button_label: block.settings.button_label 
                    -%}
                  </div>
                  {% endif %}
              
              {%- endcase -%}
            {%- endfor -%}
            {% if section.settings.show_glow and section_layout == "no_image" %}
              <div class="glow"></div>
            {% endif %}
          </div>
        </div>
      </div>



      

      {% capture section_image %}
      {% capture image_size %}{{ section.settings.section_image_max_width }}x{% endcapture %}
      <div class="section-image {{ section_layout }}" data-aos="fade-up" style="max-width: {{ section.settings.section_image_max_width }}px;">
        <img loading="lazy" src="{{ section.settings.section_image | img_url: image_size }}"
          srcset="{{ section.settings.section_image | img_url: image_size }} 1x, {{ section.settings.section_image | img_url: image_size, scale: 2 }} 2x"
          alt="{{ section.settings.section_image.alt }}">
          {% if section.settings.show_glow %}
            <div class="glow"></div>
          {% endif %} 
      </div>
      {% endcapture %}

      {% capture cta_section %}
        <div class="cta-section">
          <div class="grid-x align-center">
            {%- for block in section.blocks -%}
              {% case block.type %}
              {% when 'button' %}
                <div class="button-set {{ align_center }}">
                  {%- render 'component__button',
                  button_link: block.settings.button_link,
                  button_style: block.settings.button_style,
                  button_color: block.settings.button_color,
                  button_has_arrow: block.settings.button_has_arrow,
                  button_label: block.settings.button_label
                  -%}
                </div>
          
              {%- endcase -%}
            {%- endfor -%}
          </div>
        </div>
      {% endcapture %}

    


      {%- comment -%} show differnt layouts based on where the section image will show {%- endcomment -%}
      {% case section_layout %}

      {% when 'no_image' %}
        <div class="grid-x {{ text_color }} small-up-2 large-up-3 {{ align_center }} {{ section_layout }} image-style__{{ section.settings.image_style }}">
          {%- for block in section.blocks -%}
          {% case block.type %}
          {%- when 'text_block' -%}
          <div class="{{ visibility }} cell">
            {% render 'partial__text-grid-block', title: block.settings.title, text: block.settings.text, image: block.settings.image, svg_code: block.settings.svg_code, preset_icon: block.settings.preset_icon %}
          </div>
          {%- endcase -%}
          {%- endfor -%}
          
        </div>


      {% when 'centered_image' %}
        <div class="grid-x image-container {{ text_color }} {{ align_center }} {{ section_layout }} image-style__{{ section.settings.image_style }}">
          {% assign counter = 1 %}
          {%- for block in section.blocks -%}
            {% case block.type %}
              {%- when 'text_block' -%}

              {% capture text_block_partial %}
                {% render 'partial__text-grid-block', title: block.settings.title, text: block.settings.text, image: block.settings.image, svg_code: block.settings.svg_code, preset_icon: block.settings.preset_icon %}
              {% endcapture %}
                
                {% if counter == 1 %}
                  <div class="cell small-6 medium-3 grid-column left-side {{ visibility }}">
                    <div class="cell {{ text_block_grid_classes }}" data-aos="fade-up" data-aos-delay="100">
                      {{ text_block_partial }}
                    </div>
                {% endif %}
                
                {% if counter == 2 %}
                    <div class="cell {{ text_block_grid_classes }}" data-aos="fade-up" data-aos-delay="200">
                      {{ text_block_partial }}
                    </div>
                {% endif %}
                
                {% if counter == 3 %}
                    <div class="cell {{ text_block_grid_classes }}" data-aos="fade-up" data-aos-delay="300">
                      {{ text_block_partial }}
                    </div>
                  </div>  
                {% endif %}

                {% if counter == 4 %}
                  {% if section.settings.section_image != "" and section.settings.section_image != blank %}
                    {% capture image_size %}{{ section.settings.top_image_max_width }}x{% endcapture %}
                    <div class="cell small-11 medium-6 large-6 section-image-wrapper  {% if section.settings.show_circle %} circle {% endif %}">
                      {{ section_image }}
                    </div>
                  {% endif %}
                {% endif %}

                {% if counter == 4 %}
                  <div class="cell small-6 medium-3 right-side grid-column {{ visibility }}">
                    <div class="cell {{ text_block_grid_classes }}" data-aos="fade-up" data-aos-delay="100">
                      {{ text_block_partial }}
                    </div>
                {% endif %}

                {% if counter == 5 %}
                    <div class="cell {{ text_block_grid_classes }}" data-aos="fade-up" data-aos-delay="200">
                      {{ text_block_partial }}
                    </div>
                {% endif %}
               
                {% if counter == 6 %}
                    <div class="cell {{ text_block_grid_classes }}" data-aos="fade-up" data-aos-delay="300">
                      {{ text_block_partial }}
                    </div>
                  </div>
                {% endif %}

              {% assign counter = counter | plus:1 %}   

            {%- endcase -%}
            
          {%- endfor -%}
        </div>

      {% when 'image_above' %}
        {{ section_image }}
        <div class="grid-x {{ text_color }} small-up-2 large-up-3 {{ visibility }} {{ align_center }} {{ grid_inner_classes }} {{ section_layout }} image-style__{{ section.settings.image_style }}">
          {%- for block in section.blocks -%}
          {% case block.type %}
          {%- when 'text_block' -%}
          <div class="cell {{ text_block_grid_classes }}">
            {% render 'partial__text-grid-block', title: block.settings.title, text: block.settings.text, image: block.settings.image, svg_code: block.settings.svg_code, preset_icon: block.settings.preset_icon %}
          </div>
          {%- endcase -%}
          {%- endfor -%}
        </div>


      {% when 'image_below' %}
        <div class="grid-x {{ text_color }} small-up-2 large-up-3 {{ visibility }} {{ align_center }} {{ grid_inner_classes }} {{ section_layout }} image-style__{{ section.settings.image_style }}">
          {%- for block in section.blocks -%}
          {% case block.type %}
          {%- when 'text_block' -%}
          <div class="cell {{ text_block_grid_classes }}">
            {% render 'partial__text-grid-block', title: block.settings.title, text: block.settings.text, image: block.settings.image, svg_code: block.settings.svg_code, preset_icon: block.settings.preset_icon %}
          </div>
          {%- endcase -%}
          {%- endfor -%}
        </div>
        {{ section_image }}

      {% else %}

      {% endcase %}


      
      {%- comment -%} turn to carousel on mobile {%- endcomment -%}
      {% if section.settings.is_carousel_on_mobile %}
        <div id="aoc-mobile-slider" class="hide-for-large {{ text_color }} image-style__{{ section.settings.image_style }}"></div>
        <script>
          jQuery(function() {
            var sliderIds = [];
            jQuery('.to-slider').each(function () {
              jQuery(this).clone().appendTo(`#${jQuery(this).attr("data-slider-id")}`);
              if (!sliderIds.includes(`#${jQuery(this).attr("data-slider-id")}`)) sliderIds.push(`#${jQuery(this).attr("data-slider-id")}`);
            });
            jQuery.each(sliderIds, function (i, e) {
              jQuery(e).flickity({
                // options
                cellAlign: 'center',
                wrapAround: true,
                autoPlay: true,
                prevNextButtons: false,
                autoPlay: 2000,
              });

              jQuery(e).data('flickity').on('settle', function (event, pointer, cellElement, cellIndex) {
                // alert('dragEnd')
                setTimeout(this.player.play(), 3000)
              })
              jQuery(e).data('flickity').on('select', function (event, pointer, cellElement, cellIndex) {
                // alert('dragEnd')
                setTimeout(this.player.play(), 3000)
              })

              // jQuery(e).data('flickity').on('dragEnd', function (event, pointer, cellElement, cellIndex) { 
              //   // alert('dragEnd')
              //   setTimeout(this.player.play(), 3000)
              // })
              jQuery(e).data('flickity').on('staticClick', function (event, pointer, cellElement, cellIndex) {
                // alert('staticClick')
                setTimeout(this.player.play(), 3000)
              })
              // jQuery(e).data('flickity').on('pointerDown', function (event, pointer, cellElement, cellIndex) {
              //   // alert('pointerDown');
              //   setTimeout(this.player.play(), 3000)
              // })
              // jQuery(e).data('flickity').on('pointerMove', function (event, pointer, cellElement, cellIndex) {
              //   // alert('pointerDown');
              //   setTimeout(this.player.play(), 3000)
              // })
              // jQuery(e).data('flickity').on('pointerUp', function (event, pointer, cellElement, cellIndex) {
              //   // alert('pointerDown');
              //   setTimeout(this.player.play(), 3000)
              // })
            });
          });
        </script>
      {% endif %}

      {% if section_layout != 'centered_image' %}
      {{ cta_section }}
      {% endif %}
      

    </div>
  </div>


  {% if section.settings.bg_image != blank %}
    <div class="background-image-wrapper" >
      <img loading="lazy" src="{{ section.settings.bg_image | img_url: '1000x' }}" alt="{{ section.settings.section_image.alt }}" />
    </div>
  {% endif %}
  {% render 'component__section-dividers' %}
  {% render 'component__gradient-bg-styles' %}
  {% render 'component__accent-graphics' %}


</section>



{% schema %}
{
  "name":"Text Grid",
  "settings":[
    {
      "type":"header",
      "content":"Section Image"
    },
    {
      "type":"select",
      "id":"section_layout",
      "options":[
        { "value":"no_image", "label":"No Image" },
        { "value":"centered_image", "label":"Centered Image" },
        { "value":"image_above", "label":"Image at Top" },
        { "value":"image_below", "label":"Image at Bottom" }
      ],
      "label":"Section Layout",
      "default":"no_image"
    },
    {
      "type": "select",
      "id": "image_style",
      "options": [
          { "value": "transparent_image", "label": "Icon or Tranparent Graphic" },
          { "value": "cover_image", "label": "Full Image/JPG" }
          ],
      "label": "Image Style",
      "default": "transparent_image"
    },
    {
      "type":"image_picker",
      "id":"section_image",
      "label":"Section Image (Optional)"
    },
    {
      "type":"range",
      "id":"section_image_max_width",
      "min":30,
      "max":800,
      "step":10,
      "unit":"px",
      "label":"Image width",
      "default":400
    },
    {
      "type": "checkbox",
      "id": "show_circle",
      "default": true,
      "label": "Show Circle"
     },
    {
      "type": "checkbox",
      "id": "show_glow",
      "default": true,
      "label": "Show Glow"
     },
    {
      "type":"header",
      "content":"Content Settings"
    },
    {
      "type":"checkbox",
      "id":"is_centered",
      "default":true,
      "label":"Center Text"
    },
    {
      "type": "select",
      "id": "color_theme",
      "options": [
          { "value": "color_theme__dark", "label": "Dark Text" },
          { "value": "color_theme__light", "label": "Light Text" }
          ],
      "label": "Color Theme",
      "default": "color_theme__dark"
    },
    {
      "type":"checkbox",
      "id":"is_carousel_on_mobile",
      "default":true,
      "label":"Make carousel on mobile?"
    },
    {
      "type":"header",
      "content":"Section Spacing"
    },
    {
      "type":"checkbox",
      "id":"spacing_outside_section",
      "label":"Put the spacing outside the section"
    },
    {
      "type":"checkbox",
      "id":"is_full_width",
      "default":true,
      "label":"Full Width"
    },
    {
      "type":"checkbox",
      "id":"add_gutter",
      "label":"Add margin around section"
    },
    {
       "type": "select",
       "id": "section_spacing_top",
       "options": [
          { "value": "section_spacing_none_top", "label": "None"},
          { "value": "section_spacing_small_top", "label": "Small"},
          { "value": "section_spacing_medium_top", "label": "Medium"},
          { "value": "section_spacing_large_top", "label": "Large"},
          { "value": "section_spacing_xlarge_top", "label": "X-Large"}
       ],
       "label": "Top spacing"
    },
    {
       "type": "select",
       "id": "section_spacing_bottom",
       "options": [
          { "value": "section_spacing_none_bottom", "label": "None"},
          { "value": "section_spacing_small_bottom", "label": "Small"},
          { "value": "section_spacing_medium_bottom", "label": "Medium"},
          { "value": "section_spacing_large_bottom", "label": "Large"},
          { "value": "section_spacing_xlarge_bottom", "label": "X-Large"}
       ],
       "label": "Bottom spacing"
    },
    {
      "type":"header",
      "content":"Background"
    },
    {
      "type": "image_picker",
      "id": "bg_image",
      "label": "Background Image",
      "info": "for textures"
    },
    {
      "type": "color_background",
      "id": "bg_color",
      "label": "Background Color"
    },
    {
      "type": "header",
      "content": "Dividers"
    },
    {
      "type": "image_picker",
      "id": "section_divider_image",
      "label": "Bottom divider image",
      "info" : "will appear fullwidth at bottom of section"
    },
    {
      "type": "select",
      "id": "top_divider",
      "options": [
          { "value": "none", "label": "None"},
          { "value": "animated", "label": "Show Animated Divider"}
          ],
      "label": "Top Divider",
      "default": "none"
    },
    {
      "type": "color",
      "id": "svg_divider_top_color",
      "label": "Top divider color"
    },
    {
      "type": "select",
      "id": "bottom_divider",
      "options": [
          { "value": "none", "label": "None"},
          { "value": "animated", "label": "Show Animated Divider"}
          ],
      "label": "Bottom Divider",
      "default": "none"
    },
    {
      "type": "color",
      "id": "svg_divider_bottom_color",
      "label": "Bottom divider color"
    }
  ],
  "blocks":[
    {
      "type": "icon", 
      "name": "Icon",
      "limit": 4,
      "settings": [
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "range",
          "id": "icon_width",
          "min": 40,
          "max": 400,
          "step": 10,
          "unit": "px",
          "label": "Image width",
          "default": 150
        },
        {
          "type":"html",
          "id":"svg_code",
          "label":"Icon SVG Code",
          "info":"Paste SVG code for vector icon"
        }
      ]
    },
    {
      "type": "small_text",
      "name": "Small Text",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Section Title",
          "label": "Text"
        }
      ]
    },
    {
      "type":"heading",
      "name":"Heading",
      "limit":2,
      "settings":[
        {
          "type":"richtext",
          "id":"heading",
          "default":"<p>Heading H1</p>",
          "label":"Heading H1"
        },
        {
          "type":"select",
          "id":"header_style",
          "options":[
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            }
          ],
          "label": "Header Style",
          "default": "h1"
        },
        {
          "type": "checkbox",
          "id": "make_large",
          "label": "Make extra large",
          "info" : "only applies to H1"
        }
      ]
    },
    {
      "type":"page_title",
      "name":"Page Title",
      "limit":1,
      "settings":[
        {
          "type":"select",
          "id":"header_style",
          "options":[
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            }
          ],
          "label": "Header Style",
          "default": "h1"
        },
        {
          "type": "checkbox",
          "id": "make_large",
          "label": "Make extra large",
          "info" : "only applies to H1"
        }
      ]
    },
    {
      "type":"text",
      "name":"Text",
      "limit":1,
      "settings":[
        {
          "type":"richtext",
          "id":"text",
          "default":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum vel metus auctor.</p>",
          "label":"Text"
        },
        {
          "type":"select",
          "id":"text_style",
          "options":[
            {
              "value":"small",
              "label":"Small"
            },
            {
              "value":"regular",
              "label":"Regular"
            },
            {
              "value":"large",
              "label":"Large"
            }
          ],
          "label":"Text Style",
          "default":"regular"
        },
        {
          "type": "range",
          "id": "max_width",
          "min": 0,
          "max": 50,
          "step": 1,
          "unit": "rem",
          "label": "max_width",
          "default": 0,
          "info" : "set 0 for 100%"
        }
      ]
    },
    {
      "type":"button",
      "name":"Button",
      "limit":2,
      "settings":[
        {
          "type":"text",
          "id":"button_label",
          "default":"Button label",
          "label":"Button"
        },
        {
          "type":"url",
          "id":"button_link",
          "label":"Button Link"
        },
        {
          "type":"select",
          "id":"button_style",
          "options":[
            {
              "value":"primary",
              "label":"Primary"
            },
            {
              "value":"secondary",
              "label":"Secondary"
            },
            {
              "value":"tertiary",
              "label":"Tertiary"
            }
          ],
          "label":"Button Style",
          "default":"primary"
        }
      ]
    },
    {
      "type":"text_block",
      "name":"Text/Icon Block",
      "limit":6,
      "settings":[
        {
          "type":"text",
          "id":"title",
          "label":"Title"
        },
        {
          "type":"richtext",
          "id":"text",
          "label":"Text"
        },
        {
          "type":"image_picker",
          "id":"image",
          "label":"Icon Image"
        },
        {
          "type":"html",
          "id":"svg_code",
          "label":"Icon SVG Code",
          "info":"overrides uploaded image"
        }
        /*{
          "type": "select",
          "id": "preset_icon",
          "options": [
              { "value": "none", "label": "Color 1"},
              { "value": "hydration-icon", "label": "Hydration Icon"},
              { "value": "electrolyte-icon", "label": "Electrolyte Icon"},
              { "value": "bottle-icon", "label": "Bottle Icon"},
              { "value": "circle-icon", "label": "Circle Icon"}
              ],
          "label": "Preset Icon",
          "default": "none"
        }*/
      ]
    },
    {
      "type": "accent_graphic", 
      "name": "Accent Graphic",
      "limit": 6,
      "settings": [
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type":"html",
          "id":"svg_code",
          "label":"Graphic SVG Code",
          "info":"Paste SVG code for vector graphic"
        },
        {
          "type":"header",
          "content":"Visibility"
        },
        {
          "type": "select",
          "id": "visibility",
          "options": [
              { "value": "always", "label": "Always" },
              { "value": "desktop_only", "label": "Desktop Only" },
              { "value": "mobile_only", "label": "Mobile Only" }
              ],
          "label": "Show on..",
          "default": "always"
        },
        {
          "type":"header",
          "content":"Position"
        },
        {
          "type": "select",
          "id": "x_setting",
          "options": [
              { "value": "left", "label": "Left" },
              { "value": "right", "label": "Right" }
              ],
          "label": "X Position",
          "default": "left"
        },
        {
          "type": "select",
          "id": "y_setting",
          "options": [
              { "value": "top", "label": "Top" },
              { "value": "bottom", "label": "Bottom" }
              ],
          "label": "Y Position",
          "default": "top"
        },
        {
          "type":"header",
          "content":"Desktop Settings"
        },
        {
          "type": "range",
          "id": "width_desktop",
          "min": 40,
          "max": 400,
          "step": 10,
          "unit": "px",
          "label": "Graphic Width",
          "default": 150
        },
        {
          "type": "range",
          "id": "position_x_desktop",
          "min": -100,
          "max": 100,
          "step": 2,
          "unit": "%",
          "label": "X Position",
          "default": 10
        },
        {
          "type": "range",
          "id": "position_y_desktop",
          "min": -100,
          "max": 100,
          "step": 2,
          "unit": "%",
          "label": "Y Position",
          "default": 10
        },
        {
          "type":"header",
          "content":"Mobile Settings"
        },
        {
          "type": "range",
          "id": "width_mobile",
          "min": 40,
          "max": 400,
          "step": 10,
          "unit": "px",
          "label": "Graphic Width",
          "default": 150
        },
        {
          "type": "range",
          "id": "position_x_mobile",
          "min": -100,
          "max": 100,
          "step": 2,
          "unit": "%",
          "label": "X Position",
          "default": 10
        },
        {
          "type": "range",
          "id": "position_y_mobile",
          "min": -100,
          "max": 100,
          "step": 2,
          "unit": "%", 
          "label": "Y Position",
          "default": 10
        },
        {
          "type":"header",
          "content":"Animation Settings"
        },
        {
          "type": "select",
          "id": "animation",
          "options": [
              { "value": "none", "label": "None" },
              { "value": "rotating", "label": "Rotate" },
              { "value": "floating", "label": "Float" },
              { "value": "flying", "label": "Fly Across Screen" },
              { "value": "parallax", "label": "Parallax" }
              ],
          "label": "Animation",
          "default": "none"
        }
      ]
    }
  ],
  "presets":[
    {
      "name":"Text Grid",
      "category":"Manufactur Custom Sections",
      "blocks":[
        {
          "type":"heading"
        },
        {
          "type":"text"
        }
      ]
    }
  ]
}
{% endschema %}