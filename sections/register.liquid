{% if section.settings.color_theme %}
  {% assign text_color = section.settings.color_theme %}
{% else %}
  {% assign text_color = "" %}
{% endif %}
<section class="customer__login-page section_spacing_xlarge_top section_spacing_xlarge_bottom background">

  <div class="grid-container">
    <div class="grid-x align-center">
      <div class="cell small-12 medium-8 large-4">

              
        <div class="customer register text-center {{ text_color }}">
          <svg style="display: none">
            <symbol id="icon-error" viewBox="0 0 13 13">
              <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
              <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
              <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
              <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
            </symbol>
          </svg>

          <div class="section-header">
            <h2 class="h2 content-margin">
              {{ 'customer.register.title' | t }}
            </h1>
          </div>
          {%- form 'create_customer', novalidate: 'novalidate' -%}
            {%- if form.errors -%}
              <div class="callout alert" tabindex="-1" autofocus>
                <svg aria-hidden="true" focusable="false" role="presentation" class="hide">
                  <use href="#icon-error" />
                </svg>
                <p>{{ 'templates.contact.form.error_heading' | t }}</p>
                <ul class="errors">
                  {%- for field in form.errors -%}
                  <li>
                    {%- if field == 'form' -%}
                    {{ form.errors.messages[field] }}
                    {%- else -%}
                    <a href="#RegisterForm-{{ field }}">
                      {{ form.errors.translated_fields[field] | capitalize }}
                      {{ form.errors.messages[field] }}
                    </a>
                    {%- endif -%}
                  </li>
                  {%- endfor -%}
                </ul>
              </div>
            {%- endif -%}
            <div class="field">  
              <label for="RegisterForm-FirstName">
                {{ 'customer.register.first_name' | t }}
              </label>    
              <input
                type="text"
                name="customer[first_name]"
                id="RegisterForm-FirstName"
                {% if form.first_name %}value="{{ form.first_name }}"{% endif %}
                autocomplete="given-name"
                placeholder="{{ 'customer.register.first_name' | t }}"
              >
              
            </div>
            <div class="field">
              <label for="RegisterForm-FirstName">
                {{ 'customer.register.first_name' | t }}
              </label>
              <input
                type="text"
                name="customer[last_name]"
                id="RegisterForm-LastName"
                {% if form.last_name %}value="{{ form.last_name }}"{% endif %}
                autocomplete="family-name"
                placeholder="{{ 'customer.register.last_name' | t }}"
              >
            
            </div>
            <div class="field"> 
              <label for="RegisterForm-email">
                {{ 'customer.register.email' | t }}
              </label>     
              <input
                type="email"
                name="customer[email]"
                id="RegisterForm-email"
                {% if form.email %} value="{{ form.email }}"{% endif %}
                spellcheck="false"
                autocapitalize="off"
                autocomplete="email"
                aria-required="true"
                {% if form.errors contains 'email' %}
                  aria-invalid="true"
                  aria-describedby="RegisterForm-email-error"
                {% endif %}
                placeholder="{{ 'customer.register.email' | t }}"
              >
              
            </div>
            {%- if form.errors contains 'email' -%}
              <div class="callout alert hide" tabindex="-1" autofocus>
                <p id="RegisterForm-email-error" class="form__message">
                  {{ form.errors.translated_fields['email'] | capitalize }} {{ form.errors.messages['email'] }}.
                </p>
              </div>
            {%- endif -%}
            <div class="field">
              <label for="RegisterForm-password">
                {{ 'customer.register.password' | t }}
              </label>     
              <input
                type="password"
                name="customer[password]"
                id="RegisterForm-password"
                aria-required="true"
                {% if form.errors contains 'password' %}
                  aria-invalid="true"
                  aria-describedby="RegisterForm-password-error"
                {% endif %}
                placeholder="{{ 'customer.register.password' | t }}"
              >
              
            </div>
            {%- if form.errors contains 'password' -%}
              <div class="callout alert hide" tabindex="-1" autofocus>
                <p id="RegisterForm-password-error" class="form__message">
                  {{ form.errors.translated_fields['password'] | capitalize }} {{ form.errors.messages['password'] }}.
                </p>
              </div>
            {%- endif -%}
            <div class="content-margin button-set">
            <button class="button primary">
                {{ 'customer.register.submit' | t }}
              </button>
            </div>
          
          {%- endform -%}
          <div class="action-buttons text-center">
            <p>
              or <a href="/account" class="">login here</a>
            </p>
          </div>
        </div>
        {% if section.settings.show_glow %}
          <div class="glow"></div>
        {% endif %}

      </div>
    </div>
  </div>

  {% render 'component__gradient-bg-styles' %}
  {% render 'component__accent-graphics' %}
</section>




{% schema %}
  {
    "name": "Register Page",
    "settings": [
      {
        "type": "header",
        "content": "Colors"
      },
      {
        "type": "select",
        "id": "color_theme",
        "options": [
            { "value": "color_theme__dark", "label": "Dark Text" },
            { "value": "color_theme__light", "label": "Light Text" }
            ],
        "label": "Color Theme",
        "default": "color_theme__dark"
      },
      {
        "type": "color_background",
        "id": "bg_color",
        "label": "Background Color"
      },
      {
        "type": "checkbox",
        "id": "show_glow",
        "default": true,
        "label": "Show Glow"
      },
      {
        "type": "header",
        "content": "Dividers"
      },
      {
        "type": "checkbox",
        "id": "show_svg_divider_top",
        "label": "Show top wave",
        "info" : "Animated wave at top of section."
      },
      {
        "type": "color",
        "id": "svg_divider_top_color",
        "label": "Top Wave Color"
      },
      {
        "type": "checkbox",
        "id": "show_svg_divider_bottom",
        "label": "Show bottom wave",
        "info" : "Animated wave at bottom of section."
      },
      {
        "type": "color",
        "id": "svg_divider_bottom_color",
        "label": "Bottom Wave Color"
      }
    ],

    "blocks": [
      {
        "type": "accent_graphic", 
        "name": "Accent Graphic",
        "limit": 6,
        "settings": [
          {
            "type": "image_picker",
            "id": "icon",
            "label": "Icon"
          },
          {
            "type":"html",
            "id":"svg_code",
            "label":"Graphic SVG Code",
            "info":"Paste SVG code for vector graphic"
          },
          {
            "type":"header",
            "content":"Visibility"
          },
          {
            "type": "select",
            "id": "visibility",
            "options": [
                { "value": "always", "label": "Always" },
                { "value": "desktop_only", "label": "Desktop Only" },
                { "value": "mobile_only", "label": "Mobile Only" }
                ],
            "label": "Show on..",
            "default": "always"
          },
          {
            "type":"header",
            "content":"Position"
          },
          {
            "type": "select",
            "id": "x_setting",
            "options": [
                { "value": "left", "label": "Left" },
                { "value": "right", "label": "Right" }
                ],
            "label": "X Position",
            "default": "left"
          },
          {
            "type": "select",
            "id": "y_setting",
            "options": [
                { "value": "top", "label": "Top" },
                { "value": "bottom", "label": "Bottom" }
                ],
            "label": "Y Position",
            "default": "top"
          },
          {
            "type":"header",
            "content":"Desktop Settings"
          },
          {
            "type": "range",
            "id": "width_desktop",
            "min": 40,
            "max": 400,
            "step": 10,
            "unit": "px",
            "label": "Graphic Width",
            "default": 150
          },
          {
            "type": "range",
            "id": "position_x_desktop",
            "min": -100,
            "max": 100,
            "step": 2,
            "unit": "%",
            "label": "X Position",
            "default": 10
          },
          {
            "type": "range",
            "id": "position_y_desktop",
            "min": -100,
            "max": 100,
            "step": 2,
            "unit": "%",
            "label": "Y Position",
            "default": 10
          },
          {
            "type":"header",
            "content":"Mobile Settings"
          },
          {
            "type": "range",
            "id": "width_mobile",
            "min": 40,
            "max": 400,
            "step": 10,
            "unit": "px",
            "label": "Graphic Width",
            "default": 150
          },
          {
            "type": "range",
            "id": "position_x_mobile",
            "min": -100,
            "max": 100,
            "step": 2,
            "unit": "%",
            "label": "X Position",
            "default": 10
          },
          {
            "type": "range",
            "id": "position_y_mobile",
            "min": -100,
            "max": 100,
            "step": 2,
            "unit": "%", 
            "label": "Y Position",
            "default": 10
          },
          {
            "type":"header",
            "content":"Animation Settings"
          },
          {
            "type": "select",
            "id": "animation",
            "options": [
                { "value": "none", "label": "None" },
                { "value": "rotating", "label": "Rotate" },
                { "value": "floating", "label": "Float" },
                { "value": "flying", "label": "Fly Across Screen" },
                { "value": "parallax", "label": "Parallax" }
                ],
            "label": "Animation",
            "default": "none"
          }
        ]
      }
    ]
  }
{% endschema %}
