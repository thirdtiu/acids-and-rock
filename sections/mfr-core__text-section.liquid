{%- comment -%}
--------------------------------------
assign section settings to variables
--------------------------------------
{%- endcomment -%}

{% if section.settings.spacing_outside_section %}
  {%- assign top_spacing_inside = section.settings.section_spacing_top -%}
  {%- assign bottom_spacing_inside = section.settings.section_spacing_bottom -%}
  {%- assign bg_color_on_inner = "background" -%}
  {% assign extra_padding = "inside-padding" %}
{% else %}
  {%- assign top_spacing_outside = section.settings.section_spacing_top -%}
  {%- assign bottom_spacing_outside = section.settings.section_spacing_bottom -%}
  {%- assign bg_color_on_section = "background" -%}
  {% assign extra_padding = "" %}
{% endif %}

{% if section.settings.color_theme %}
  {% assign text_color = section.settings.color_theme %}
{% else %}
  {% assign text_color = "" %}
{% endif %}


{% if section.settings.is_full_width %}
  {% assign is_full_width = "full" %}
{% else %}
  {% assign is_full_width = "" %}
{% endif %}


{% if section.settings.is_centered %}
  {% assign text_center = "text-center" %}
  {% assign align_center = "align-center" %}
{% else %}
  {% assign text_center = "" %}
  {% assign align_center = "" %}
{% endif %}

{% if section.settings.add_gutter %}
  {% assign grid_gutter = "grid-gutter" %}
{% else %}
  {% assign grid_gutter = "" %}
{% endif %}

{% if section.settings.is_centered %}
  {% assign text_alignment = "text-center" %}
  {% assign content_alignment = "align-center" %}
{% else %}
  {% assign text_alignment = "" %}
  {% assign content_alignment = "" %}
{% endif %}

<section class="mfr-core__text-section {{ bg_color_on_section }}">

  <div class="{{ top_spacing_outside }} {{ bottom_spacing_outside }}">

    <div class="grid-container {{ full_mobile }} {{ is_full_width }} {{ top_spacing_inside }} {{ bottom_spacing_inside }}">
      <div class="inner  {{ extra_padding }} {{ bg_color_on_inner }} {{ grid_gutter }} ">
  
  
        <div class="grid-x {{ align_center }}">
          {% if section.settings.text_background %}
            {% capture image_size %}800x{% endcapture %}
            <div class="text-background image {{ section_layout }}">
              <img loading="lazy" src="{{ section.settings.text_background | img_url: image_size }}"
                srcset="{{ section.settings.text_background | img_url: image_size }} 1x, {{ section.settings.text_background | img_url: image_size, scale: 2 }} 2x"
                alt="{{ section.settings.text_background.alt }}" data-aos="zoom-in">
            </div>
          {% endif %}
          <div class="cell small-11 medium-10 section-content {{ text_color }} {{ text_center }}">
            <div class="inner">
  
              {%- for block in section.blocks -%}
                {% case block.type %}
                 
                
                  {%- when 'icon' -%}
                    {% render 'component__section-icon', icon: block.settings.icon, icon_width: block.settings.icon_width, svg_code: block.settings.svg_code %} 
                 
                    
                  {%- when 'small_text' -%}
                    <div class="small-text" {{ block.shopify_attributes }} {% if block.settings.small_text_color !='rgba(0,0,0,0)' %}
                      style="color: {{ block.settings.small_text_color }};" {% endif %} data-aos="fade-up">
                      {{ block.settings.text }}
                    </div>
                
                    
                  {%- when 'heading' -%}
                    {% render 'component__title-block', text: block.settings.heading, classes: block.settings.header_style, text_size: block.settings.make_large %}
                
                    
                  {%- when 'text' -%}
                    <div class="section-text {{ block.settings.text_style }}" {{ block.shopify_attributes }} {{ animation_type }}  data-aos="fade-up" style="{% if block.settings.max_width == 0 %}max-width: 100%;{% elsif block.settings.max_width >= 1 %} max-width: {{ block.settings.max_width }}rem; width: 90%; {% endif %}">{{ block.settings.text }}</div>


                  {%- when 'text_callout' -%}
                    {% render 'component__text-callout',
                      callout_size: block.settings.callout_size,
                      circle_color: block.settings.circle_color,
                      translate_y: block.settings.translate_y,
                      text: block.settings.text,
                      phyllup_style: block.settings.phyllup_style
                    %}
                    
  

                  {%- when 'video' -%}   
                    {%- if block.settings.auto_play_nosound -%}
                      {%- assign video_settings = "playsinline autoplay muted loop" -%}
                    {%- else -%}
                      {%- assign video_settings = "playsinline" -%}
                      {%- capture play_button -%}
                        <button type="button" class="playpause" id="play_button">
                          {% render 'icon-play' %}
                        </button>
                      {%- endcapture -%}
                      {%- capture cover_image -%}
                        <div class="cover-image" style="background-image:url({{ block.settings.cover_image | img_url: '600x' }});"></div>
                      {%- endcapture -%}
                    {%- endif -%}
                    
                    {%- if block.settings.platform_video_url != blank -%}
                      <div class="responsive-embed widescreen">
                        {% if block.settings.platform_video_url.type == "youtube" %}
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/{{ block.settings.platform_video_url.id }}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                        {% elsif block.settings.platform_video_url.type == "vimeo" %}
                          <iframe width="560" height="315" src="https://player.vimeo.com/video/{{ block.settings.platform_video_url.id }}" title="Vimeo video player" frameborder="0" allowfullscreen></iframe>
                        {% endif %}
                      </div>
                    {%- elsif block.settings.hosted_video_url != blank -%}
                      <div class="video-wrapper video-player">
                        {{ play_button }}
                        {{ cover_image }}
                        <video  class="video" poster="{{ block.settings.cover_image | img_url: '200x' }}" {{ video_settings }} preload="auto" >
                          <source src="{{ block.settings.hosted_video_url | url }}"  type="video/mp4">
                        </video>
                      </div>
                    {%- endif-%}
  

                  {%- when 'image' -%}
                    {% capture image_size %}{{ block.settings.image_width }}x{% endcapture %}
                    <div class="image {{ section_layout }}" style="max-width: {{ block.settings.image_width }}px;" data-aos="zoom-in">
                      <img loading="lazy" src="{{ block.settings.image | img_url: image_size }}"
                        srcset="{{ block.settings.image | img_url: image_size }} 1x, {{ block.settings.image | img_url: image_size, scale: 2 }} 2x"
                        alt="{{ block.settings.image.alt }}">
                    </div>
  
                {%- endcase -%}
              {%- endfor -%}
  
              <div class="button-set {{ content_alignment }}" data-aos="zoom-in">
                {%- for block in section.blocks -%}
                  {% case block.type %}
                    {%- when 'button' -%}
                      {%- render 'component__button', 
                        button_link: block.settings.button_link, 
                        button_style: block.settings.button_style, 
                        button_color: block.settings.button_color, 
                        button_has_arrow: block.settings.button_has_arrow, 
                        button_label: block.settings.button_label 
                      -%}
                  {%- endcase -%}
                {%- endfor -%}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

  </div>


  {%- render 'component__section-dividers' -%}
  {%- render 'component__gradient-bg-styles' -%}
  {%- render 'component__accent-graphics' -%}


</section>






{% schema %}
{
  "name":"Text Section",
  "settings":[
    {
      "type":"header",
      "content":"Content Settings"
    },
    {
      "type":"checkbox",
      "id":"is_centered",
      "default":true,
      "label":"Center Text"
    },
    {
      "type": "select",
      "id": "color_theme",
      "options": [
          { "value": "color_theme__dark", "label": "Dark Text" },
          { "value": "color_theme__light", "label": "Light Text" }
          ],
      "label": "Color Theme",
      "default": "color_theme__dark"
    },
    {
      "type":"header",
      "content":"Section Spacing"
    },
    {
      "type":"checkbox",
      "id":"spacing_outside_section",
      "label":"Put the spacing outside the section"
    },
    {
      "type":"checkbox",
      "id":"is_full_width",
      "default":true,
      "label":"Full Width"
    },
    {
      "type":"checkbox",
      "id":"add_gutter",
      "label":"Add margin around section"
    },
    {
       "type": "select",
       "id": "section_spacing_top",
       "options": [
          { "value": "section_spacing_none_top", "label": "None"},
          { "value": "section_spacing_small_top", "label": "Small"},
          { "value": "section_spacing_medium_top", "label": "Medium"},
          { "value": "section_spacing_large_top", "label": "Large"},
          { "value": "section_spacing_xlarge_top", "label": "X-Large"}
       ],
       "label": "Top spacing"
    },
    {
       "type": "select",
       "id": "section_spacing_bottom",
       "options": [
          { "value": "section_spacing_none_bottom", "label": "None"},
          { "value": "section_spacing_small_bottom", "label": "Small"},
          { "value": "section_spacing_medium_bottom", "label": "Medium"},
          { "value": "section_spacing_large_bottom", "label": "Large"},
          { "value": "section_spacing_xlarge_bottom", "label": "X-Large"}
       ],
       "label": "Bottom spacing"
    },
    {
      "type":"header",
      "content":"Text Background"
    },
    {
      "type": "image_picker",
      "id": "text_background",
      "label": "Image"
    },
    {
      "type":"header",
      "content":"Background"
    },
    {
      "type": "color_background",
      "id": "bg_color",
      "label": "Background Color"
    },
    {
      "type": "header",
      "content": "Dividers"
    },
    {
      "type": "image_picker",
      "id": "section_divider_image",
      "label": "Bottom divider image",
      "info" : "will appear fullwidth at bottom of section"
    },
    {
      "type": "select",
      "id": "top_divider",
      "options": [
          { "value": "none", "label": "None"},
          { "value": "animated", "label": "Show Animated Divider"}
          ],
      "label": "Top Divider",
      "default": "none"
    },
    {
      "type": "color",
      "id": "svg_divider_top_color",
      "label": "Top divider color"
    },
    {
      "type": "select",
      "id": "bottom_divider",
      "options": [
          { "value": "none", "label": "None"},
          { "value": "animated", "label": "Show Animated Divider"}
          ],
      "label": "Bottom Divider",
      "default": "none"
    },
    {
      "type": "color",
      "id": "svg_divider_bottom_color",
      "label": "Bottom divider color"
    }
  ],
  "blocks":[
    {
      "type": "icon", 
      "name": "Icon",
      "limit": 4,
      "settings": [
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "range",
          "id": "icon_width",
          "min": 40,
          "max": 400,
          "step": 10,
          "unit": "px",
          "label": "Image width",
          "default": 150
        },
        {
          "type":"html",
          "id":"svg_code",
          "label":"Icon SVG Code",
          "info":"Paste SVG code for vector icon"
        }
      ]
    },
    {
      "type":"small_text",
      "name":"Small Text",
      "limit":1,
      "settings":[
        {
          "type":"text",
          "id":"text",
          "default":"Section Title",
          "label":"Text"
        },
        {
          "type": "color",
          "id": "small_text_color",
          "label": "Color"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "limit": 4,
      "settings": [
        {
          "type": "richtext",
          "id": "heading",
          "default": "<p>Heading H1</p>",
          "label": "Heading H1"
        },
        {
          "type": "select",
          "id": "header_style",
          "options": [
              { "value": "h1", "label": "H1"},
              { "value": "h2", "label": "H2"},
              { "value": "h3", "label": "H3"}
              ],
          "label": "Header Style",
          "default": "h1"
        },
        {
          "type": "checkbox",
          "id": "make_large",
          "label": "Make extra large",
          "info" : "only applies to H1"
        }
      ]
    },
    {
      "type":"text",
      "name":"Text",
      "limit":1,
      "settings":[
        {
          "type":"richtext",
          "id":"text",
          "default":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum vel metus auctor.</p>",
          "label":"Text"
        },
        {
          "type":"select",
          "id":"text_style",
          "options":[
            {
              "value":"small",
              "label":"Small"
            },
            {
              "value":"regular",
              "label":"Regular"
            },
            {
              "value":"large",
              "label":"Large"
            }
          ],
          "label":"Text Style",
          "default":"regular"
        },
        {
          "type": "range",
          "id": "max_width",
          "min": 0,
          "max": 50,
          "step": 1,
          "unit": "rem",
          "label": "max_width",
          "default": 0,
          "info" : "set 0 for 100%"
        }
      ]
    },
    {
      "type":"button",
      "name":"Button",
      "limit":2,
      "settings":[
        {
          "type":"text",
          "id":"button_label",
          "default":"Button label",
          "label":"Button",
          "info":"Leave the label blank to hide the button."
        },
        {
          "type":"url",
          "id":"button_link",
          "label":"Button Link"
        },
        {
          "type":"select",
          "id":"button_style",
          "options":[
            {
              "value":"primary",
              "label":"Primary"
            },
            {
              "value":"secondary",
              "label":"Secondary"
            },
            {
              "value":"tertiary",
              "label":"Tertiary"
            }
          ],
          "label":"Button Style",
          "default":"primary"
        },
        {
          "type":"checkbox",
          "id":"button_has_arrow",
          "label":"Add Arrow to button",
          "default":false
        }
      ]
    },
    {
      "type": "image", 
      "name": "Image",
      "limit": 4,
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "image_width",
          "min": 100,
          "max": 1600,
          "step": 50,
          "unit": "px",
          "label": "Image width",
          "default": 800
        }
      ]
    },
    {
      "type": "video", 
      "name": "Video",
      "limit": 4,
      "settings": [
        {
          "type": "video_url",
          "id": "platform_video_url",
          "label": "Youtube or Vimeo video",
          "accept": [
            "youtube",
            "vimeo"
          ]
        },
        {
          "type": "image_picker",
          "id": "cover_image",
          "label": "Video cover image",
          "info": "shows before video is loaded"
        },
        {
          "type":"text",
          "id":"hosted_video_url",
          "label":"Video file URL",
          "info": "upload a .mp4 file in settings > files"
        }
      ]
    },
    {
      "type": "text_callout",
      "name": "Text Callout",
      "limit": 1,
      "settings": [
        {
          "type": "textarea",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "color",
          "id": "circle_color",
          "label": "Wavy circle color"
        },
        {
          "type":"header",
          "content":"Alignment"
        },
        {
          "type": "select",
          "id": "callout_size",
          "label": "size",
          "options": [
            {
              "value": "small", "label": "Small" },
            {
              "value": "large", "label": "Large" }
          ],
          "default": "large"
        },
        {
          "type": "select",
          "id": "phyllup_style",
          "label": "Phyllup Style",
          "options": [
            {
              "value": "stoked", "label": "Stoked" },
            {
              "value": "interested", "label": "Interested" }
          ],
          "default": "stoked"
        },
        {
          "type": "range",
          "id": "translate_y",
          "min": -150,
          "max": 150,
          "step": 10,
          "unit": "px",
          "label": "Offset",
          "default": 0,
          "info": "move up to overlap content"
        }
      ]
    },
    {
      "type": "accent_graphic", 
      "name": "Accent Graphic",
      "limit": 6,
      "settings": [
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type":"html",
          "id":"svg_code",
          "label":"Graphic SVG Code",
          "info":"Paste SVG code for vector graphic"
        },
        {
          "type":"header",
          "content":"Visibility"
        },
        {
          "type": "select",
          "id": "visibility",
          "options": [
              { "value": "always", "label": "Always" },
              { "value": "desktop_only", "label": "Desktop Only" },
              { "value": "mobile_only", "label": "Mobile Only" }
              ],
          "label": "Show on..",
          "default": "always"
        },
        {
          "type":"header",
          "content":"Position"
        },
        {
          "type": "select",
          "id": "x_setting",
          "options": [
              { "value": "left", "label": "Left" },
              { "value": "right", "label": "Right" }
              ],
          "label": "X Position",
          "default": "left"
        },
        {
          "type": "select",
          "id": "y_setting",
          "options": [
              { "value": "top", "label": "Top" },
              { "value": "bottom", "label": "Bottom" }
              ],
          "label": "Y Position",
          "default": "top"
        },
        {
          "type":"header",
          "content":"Desktop Settings"
        },
        {
          "type": "range",
          "id": "width_desktop",
          "min": 40,
          "max": 400,
          "step": 10,
          "unit": "px",
          "label": "Graphic Width",
          "default": 150
        },
        {
          "type": "range",
          "id": "position_x_desktop",
          "min": -100,
          "max": 100,
          "step": 2,
          "unit": "%",
          "label": "X Position",
          "default": 10
        },
        {
          "type": "range",
          "id": "position_y_desktop",
          "min": -100,
          "max": 100,
          "step": 2,
          "unit": "%",
          "label": "Y Position",
          "default": 10
        },
        {
          "type":"header",
          "content":"Mobile Settings"
        },
        {
          "type": "range",
          "id": "width_mobile",
          "min": 40,
          "max": 400,
          "step": 10,
          "unit": "px",
          "label": "Graphic Width",
          "default": 150
        },
        {
          "type": "range",
          "id": "position_x_mobile",
          "min": -100,
          "max": 100,
          "step": 2,
          "unit": "%",
          "label": "X Position",
          "default": 10
        },
        {
          "type": "range",
          "id": "position_y_mobile",
          "min": -100,
          "max": 100,
          "step": 2,
          "unit": "%",
          "label": "Y Position",
          "default": 10
        },
        {
          "type":"header",
          "content":"Animation Settings"
        },
        {
          "type": "select",
          "id": "animation",
          "options": [
              { "value": "none", "label": "None" },
              { "value": "rotating", "label": "Rotate" },
              { "value": "floating", "label": "Float" },
              { "value": "flying", "label": "Fly Across Screen" },
              { "value": "parallax", "label": "Parallax" }
              ],
          "label": "Animation",
          "default": "none"
        },
        {
          "type":"checkbox",
          "id":"show_shadow",
          "label":"Show Shadow"
        }
      ]
    }
  ],
  "presets":[
    {
      "name":"Text Section",
      "category":"Manufactur Custom Sections",
      "blocks":[
        {
          "type":"heading"
        },
        {
          "type":"text"
        }
      ]
    }
  ]
}
{% endschema %}